// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using inpositionlibrary.Models.Data;

#nullable disable

namespace inpositionlibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("inpositionlibrary.Models.Bibloteka", b =>
                {
                    b.Property<string>("Pika")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kontakti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pika");

                    b.ToTable("Bibloteka");
                });

            modelBuilder.Entity("inpositionlibrary.Models.Punetori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BiblotekaPika")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Mbarimi_iKontrates")
                        .HasColumnType("date");

                    b.Property<string>("Pozita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BiblotekaPika");

                    b.ToTable("Punetori");
                });

            modelBuilder.Entity("inpositionlibrary.Models.Punetori", b =>
                {
                    b.HasOne("inpositionlibrary.Models.Bibloteka", "Bibloteka")
                        .WithMany()
                        .HasForeignKey("BiblotekaPika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bibloteka");
                });
#pragma warning restore 612, 618
        }
    }
}
